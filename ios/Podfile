# for firebase
$RNFirebaseAsStaticFramework = true
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# use_modular_headers!

platform :ios, '13.0'
install! 'cocoapods', :deterministic_uuids => false

target 'Wallet' do
  # for firebase
  use_frameworks! :linkage => :static

  config = use_native_modules!
  pod 'TouchID', :path => "../node_modules/react-native-touch-id"

  # Flags change depending on the env values.
  flags = get_default_flags()

  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec', :modular_headers => false
  # pod 'CustomAuth', '~> 4.0.1', :modular_headers => true
  pod 'CustomAuth', :git => 'https://github.com/mvlchain/customauth-swift-sdk.git', :tag => '4.1.0-955f1', :modular_headers => true

  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
  pod 'Permission-FaceID', :path => "#{permissions_path}/FaceID"
  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"
  pod 'RxSwift', '6.5.0'
  pod 'RxCocoa', '6.5.0'
  pod 'KeychainAccess'
  pod 'Torus-utils', '3.0.0', :modular_headers => true
  pod 'web3.swift', '0.9.3', :modular_headers => true
  pod 'secp256k1.swift', '0.1.4', :modular_headers => true

  pre_install do |installer|
    installer.pod_targets.each do |pod|
      if pod.name.eql?('vision-camera-code-scanner') || pod.name.eql?('VisionCamera') || pod.name.eql?('react-native-quick-base64') || pod.name.eql?('RNPermissions') || pod.name.start_with?('Permission-')
        def pod.build_type
          Pod::BuildType.static_library
        end
      end
    end
  end

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :flipper_configuration => FlipperConfiguration.disabled
  )

  target 'WalletTests' do
    inherit! :complete
    # Pods for testing
    pod 'RxBlocking', '6.5.0'
    pod 'RxTest', '6.5.0'
  end

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)

    installer.pods_project.targets.each do |target|
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end

      if target.name == "web3.swift"
        target.build_configurations.each do |config|
          config.build_settings["SWIFT_INCLUDE_PATHS[sdk=iphonesimulator*]"] = "$(inherited) $(PODS_CONFIGURATION_BUILD_DIR)/BigInt $(PODS_CONFIGURATION_BUILD_DIR)/GenericJSON $(PODS_TARGET_SRCROOT)/web3swift/lib/**"
          config.build_settings["SWIFT_INCLUDE_PATHS[sdk=iphoneos*]"] = "$(inherited) $(PODS_CONFIGURATION_BUILD_DIR)/BigInt $(PODS_CONFIGURATION_BUILD_DIR)/GenericJSON $(PODS_TARGET_SRCROOT)/web3swift/lib/**"
        end
      end
    end

    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
    end
  end
end

