module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  extends: [
    '@react-native-community',
    'plugin:prettier/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
    'plugin:react/recommended',
  ],
  ignorePatterns: ['generated-scheme.ts', '__mocks__'],
  plugins: ['@typescript-eslint'],
  overrides: [
    {
      files: ['*.js'],
      rules: {
        'max-lines': 'off',
      },
    },
  ],
  rules: {
    'prettier/prettier': 'error',
    'no-shadow': 'off',
    'no-undef': 'off',
    'no-multiple-empty-lines': ['error', { max: 2, maxEOF: 1 }],
    'no-useless-escape': 'off',
    'no-extra-boolean-cast': 'off',
    'no-constant-condition': 'off',
    'no-case-declarations': 'off',
    'space-before-function-paren': 'off',
    '@typescript-eslint/space-before-function-paren': ['error', { anonymous: 'always', named: 'never', asyncArrow: 'always' }],
    'max-len': ['error', { code: 150 }],
    'max-lines': ['error', { max: 180, skipComments: true, skipBlankLines: true }],
    'import/order': [
      'warn',
      {
        groups: ['builtin', 'external', ['type', 'internal', 'unknown'], 'parent', 'sibling', 'index'],
        pathGroups: [
          {
            pattern: '{react, react-native}',
            group: 'builtin',
            position: 'before',
          },
          {
            pattern: '@@*/**',
            group: 'internal',
            patternOptions: { partial: true, nocomment: true },
          },
          {
            pattern: '@@**',
            group: 'internal',
            patternOptions: { partial: true, nocomment: true },
          },
        ],
        pathGroupsExcludedImportTypes: ['react', 'react-native'],
        'newlines-between': 'always',
        alphabetize: { order: 'asc' },
      },
    ],
    'import/namespace': 'off',
    'import/no-unresolved': 'off',
    'import/no-named-as-default': 'off',
    'react/display-name': 'off',
    'react/prop-types': 'off',
    'react/jsx-key': 'off',
    'react/jsx-no-target-blank': 'off',
    'react/no-unescaped-entities': 'off',
    'react/jsx-curly-spacing': [
      'warn',
      {
        attributes: { when: 'never' },
        children: { when: 'never' },
        allowMultiline: true,
      },
    ],
    'react/jsx-one-expression-per-line': ['off', { allow: 'single-child' }],
    'react/jsx-uses-react': 'off',
    'react/react-in-jsx-scope': 'off',
    '@typescript-eslint/no-unused-vars': 'warn',
    '@typescript-eslint/no-shadow': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/ban-ts-ignore': 'off',
    '@typescript-eslint/tsx-props-no-spreading': 'off',
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-this-alias': 'off',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/member-delimiter-style': 'off',
    '@typescript-eslint/member-ordering': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    '@typescript-eslint/no-parameter-properties': 'off',
    '@typescript-eslint/no-unused-expressions': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/prefer-for-of': 'off',
    '@typescript-eslint/semi': 'off',
    '@typescript-eslint/type-annotation-spacing': 'off',
    'react-hooks/exhaustive-deps': 'off',
  },
};
